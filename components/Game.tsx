import Board from '@/components/Board';
import { db } from '@/lib/firebase';
import { gameSubject, initGame, resetGame } from '@/lib/Game';
import { Center, Container, Text } from '@chakra-ui/layout';
import { Button } from '@chakra-ui/react';
import { doc } from 'firebase/firestore';
import { Inter } from 'next/font/google';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Game() {
  const [board, setBoard] = useState([]);
  const [isGameOver, setIsGameOver] = useState();
  const [result, setResult] = useState();
  const [turn, setTurn] = useState();
  const router = useRouter();
  const { id: gameId } = router.query;

  useEffect(() => {
    initGame(gameId !== 'local' ? doc(db, 'game', gameId) : null);

    console.log('game', gameSubject);
    const subscribe = gameSubject.subscribe((game: any) => {
      setBoard(game.board);
      setIsGameOver(game.isGameOver);
      setResult(game.result);
      setTurn(game.turn);
    });
    return () => subscribe.unsubscribe();
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container
        minHeight={'100vh'}
        display={'flex'}
        background={'rgb(34, 34, 34)'}
        alignItems={'center'}
        justifyContent={'center'}
      >
        {isGameOver && (
          <Text
            style={{
              textOrientation: 'upright',
              writingMode: 'vertical-lr',
              fontFamily: 'sans-serif',
            }}
            p={'10px'}
            color="white"
          >
            GAME OVER
            <Button
              p="10px"
              color="white"
              mt="20px"
              cursor={'pointer'}
              background="rgb(63,63,63)"
              border={'2px solid white'}
              borderRadius="10px"
              onClick={resetGame}
            >
              <span
                style={{
                  textOrientation: 'upright',
                  writingMode: 'vertical-lr',
                  fontFamily: 'sans-serif',
                }}
              >
                New Game
              </span>
            </Button>
          </Text>
        )}
        <Center width={'600px'} height={'600px'}>
          {
            //@ts-ignore

            <Board board={board} turn={turn}></Board>
          }
        </Center>
        {result && (
          <Text
            style={{
              textOrientation: 'upright',
              writingMode: 'vertical-lr',
              fontFamily: 'sans-serif',
            }}
            p={'10px'}
            color="white"
          >
            {result}
          </Text>
        )}
      </Container>
    </>
  );
}
