import { auth } from '@/lib/firebase';
import { gameSubject, initGame } from '@/lib/Game';
import { Box, Center, Container, Heading } from '@chakra-ui/layout';
import { Button, Input } from '@chakra-ui/react';
import Head from 'next/head';
import { useRouter } from 'next/router';
import { useEffect, useState } from 'react';

export default function UserForm() {
  const [board, setBoard] = useState([]);
  const [isGameOver, setIsGameOver] = useState();
  const [result, setResult] = useState();
  const [turn, setTurn] = useState();
  const [position, setPosition] = useState();
  const router = useRouter();
  const [name, setName] = useState('');

  useEffect(() => {
    initGame();
    const subscribe = gameSubject.subscribe((game) => {
      setBoard(game.board);
      setIsGameOver(game.isGameOver);
      setResult(game.result);
      setTurn(game.turn);
      setPosition(game.position);
    });
    return () => subscribe.unsubscribe();
  }, []);

  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
    try {
      e.preventDefault();
      localStorage.setItem('userName', name);
      await auth.signInAnonymously();
      router.push('/dashboard');
    } catch (error: any) {
      console.log(error.message);
    }
  };

  return (
    <form onSubmit={handleSubmit}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container paddingTop={'20px'}>
        <Center display={'flex'} flexDir={'column'}>
          <Heading
            style={{
              fontFamily: 'sans-serif',
            }}
            padding={'5px'}
          >
            Enter your name to start
          </Heading>

          <Box>
            <Input
              type="text"
              name=""
              id=""
              className="input"
              placeholder="Name"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
              padding={'5px'}
            />
          </Box>

          <Button
            colorScheme={'blue'}
            size="md"
            type="submit"
            marginTop={'5px'}
          >
            Start
          </Button>
        </Center>
      </Container>
    </form>
  );
}
